/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package business.model.strategy;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Schema for the Coporate Business Model Strategy Part */
@org.apache.avro.specific.AvroGenerated
public class BusinessModelStrategy extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8354639983941950121L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BusinessModelStrategy\",\"namespace\":\"business.model.strategy\",\"doc\":\"Schema for the Coporate Business Model Strategy Part\",\"fields\":[{\"name\":\"avro_fingerprint\",\"type\":\"long\"},{\"name\":\"index_ipid\",\"type\":\"string\"},{\"name\":\"last_update_timestamp\",\"type\":\"long\",\"logical-type\":\"time-micros\"},{\"name\":\"last_update_loginid\",\"type\":\"string\"},{\"name\":\"partner_ipid\",\"type\":\"string\"},{\"name\":\"drivers\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"competencies\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"capabilities\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"client_structure\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"goals\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sales_regions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"enum\",\"name\":\"MarketRegionsEnum\",\"doc\":\"Market Regions Enumeration using UNO M49 standard: https://unstats.un.org/unsd/methodology/m49\",\"symbols\":[\"M49_150\",\"M49_142\",\"M49_021\",\"M49_756\",\"other\"]}}],\"default\":null},{\"name\":\"sales_countries_150\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Countries in Europe Region (ISO 3166-1 alpha-2)\",\"default\":null},{\"name\":\"sales_countries_142\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Countries in Asia Region (M49 codes)\",\"default\":null},{\"name\":\"sales_countries_021\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Countries in North America Region (M49 codes)\",\"default\":null},{\"name\":\"sales_countries_other\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Countries in Other Region (M49 codes)\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BusinessModelStrategy> ENCODER =
      new BinaryMessageEncoder<BusinessModelStrategy>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BusinessModelStrategy> DECODER =
      new BinaryMessageDecoder<BusinessModelStrategy>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BusinessModelStrategy> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BusinessModelStrategy> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BusinessModelStrategy> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BusinessModelStrategy>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BusinessModelStrategy to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BusinessModelStrategy from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BusinessModelStrategy instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BusinessModelStrategy fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long avro_fingerprint;
  @Deprecated public java.lang.CharSequence index_ipid;
  @Deprecated public long last_update_timestamp;
  @Deprecated public java.lang.CharSequence last_update_loginid;
  @Deprecated public java.lang.CharSequence partner_ipid;
  @Deprecated public java.lang.CharSequence drivers;
  @Deprecated public java.lang.CharSequence competencies;
  @Deprecated public java.lang.CharSequence capabilities;
  @Deprecated public java.lang.CharSequence client_structure;
  @Deprecated public java.lang.CharSequence goals;
  @Deprecated public java.util.List<business.model.strategy.MarketRegionsEnum> sales_regions;
  /** Countries in Europe Region (ISO 3166-1 alpha-2) */
  @Deprecated public java.util.List<java.lang.CharSequence> sales_countries_150;
  /** Countries in Asia Region (M49 codes) */
  @Deprecated public java.util.List<java.lang.CharSequence> sales_countries_142;
  /** Countries in North America Region (M49 codes) */
  @Deprecated public java.util.List<java.lang.CharSequence> sales_countries_021;
  /** Countries in Other Region (M49 codes) */
  @Deprecated public java.util.List<java.lang.CharSequence> sales_countries_other;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BusinessModelStrategy() {}

  /**
   * All-args constructor.
   * @param avro_fingerprint The new value for avro_fingerprint
   * @param index_ipid The new value for index_ipid
   * @param last_update_timestamp The new value for last_update_timestamp
   * @param last_update_loginid The new value for last_update_loginid
   * @param partner_ipid The new value for partner_ipid
   * @param drivers The new value for drivers
   * @param competencies The new value for competencies
   * @param capabilities The new value for capabilities
   * @param client_structure The new value for client_structure
   * @param goals The new value for goals
   * @param sales_regions The new value for sales_regions
   * @param sales_countries_150 Countries in Europe Region (ISO 3166-1 alpha-2)
   * @param sales_countries_142 Countries in Asia Region (M49 codes)
   * @param sales_countries_021 Countries in North America Region (M49 codes)
   * @param sales_countries_other Countries in Other Region (M49 codes)
   */
  public BusinessModelStrategy(java.lang.Long avro_fingerprint, java.lang.CharSequence index_ipid, java.lang.Long last_update_timestamp, java.lang.CharSequence last_update_loginid, java.lang.CharSequence partner_ipid, java.lang.CharSequence drivers, java.lang.CharSequence competencies, java.lang.CharSequence capabilities, java.lang.CharSequence client_structure, java.lang.CharSequence goals, java.util.List<business.model.strategy.MarketRegionsEnum> sales_regions, java.util.List<java.lang.CharSequence> sales_countries_150, java.util.List<java.lang.CharSequence> sales_countries_142, java.util.List<java.lang.CharSequence> sales_countries_021, java.util.List<java.lang.CharSequence> sales_countries_other) {
    this.avro_fingerprint = avro_fingerprint;
    this.index_ipid = index_ipid;
    this.last_update_timestamp = last_update_timestamp;
    this.last_update_loginid = last_update_loginid;
    this.partner_ipid = partner_ipid;
    this.drivers = drivers;
    this.competencies = competencies;
    this.capabilities = capabilities;
    this.client_structure = client_structure;
    this.goals = goals;
    this.sales_regions = sales_regions;
    this.sales_countries_150 = sales_countries_150;
    this.sales_countries_142 = sales_countries_142;
    this.sales_countries_021 = sales_countries_021;
    this.sales_countries_other = sales_countries_other;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return avro_fingerprint;
    case 1: return index_ipid;
    case 2: return last_update_timestamp;
    case 3: return last_update_loginid;
    case 4: return partner_ipid;
    case 5: return drivers;
    case 6: return competencies;
    case 7: return capabilities;
    case 8: return client_structure;
    case 9: return goals;
    case 10: return sales_regions;
    case 11: return sales_countries_150;
    case 12: return sales_countries_142;
    case 13: return sales_countries_021;
    case 14: return sales_countries_other;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: avro_fingerprint = (java.lang.Long)value$; break;
    case 1: index_ipid = (java.lang.CharSequence)value$; break;
    case 2: last_update_timestamp = (java.lang.Long)value$; break;
    case 3: last_update_loginid = (java.lang.CharSequence)value$; break;
    case 4: partner_ipid = (java.lang.CharSequence)value$; break;
    case 5: drivers = (java.lang.CharSequence)value$; break;
    case 6: competencies = (java.lang.CharSequence)value$; break;
    case 7: capabilities = (java.lang.CharSequence)value$; break;
    case 8: client_structure = (java.lang.CharSequence)value$; break;
    case 9: goals = (java.lang.CharSequence)value$; break;
    case 10: sales_regions = (java.util.List<business.model.strategy.MarketRegionsEnum>)value$; break;
    case 11: sales_countries_150 = (java.util.List<java.lang.CharSequence>)value$; break;
    case 12: sales_countries_142 = (java.util.List<java.lang.CharSequence>)value$; break;
    case 13: sales_countries_021 = (java.util.List<java.lang.CharSequence>)value$; break;
    case 14: sales_countries_other = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'avro_fingerprint' field.
   * @return The value of the 'avro_fingerprint' field.
   */
  public long getAvroFingerprint() {
    return avro_fingerprint;
  }


  /**
   * Sets the value of the 'avro_fingerprint' field.
   * @param value the value to set.
   */
  public void setAvroFingerprint(long value) {
    this.avro_fingerprint = value;
  }

  /**
   * Gets the value of the 'index_ipid' field.
   * @return The value of the 'index_ipid' field.
   */
  public java.lang.CharSequence getIndexIpid() {
    return index_ipid;
  }


  /**
   * Sets the value of the 'index_ipid' field.
   * @param value the value to set.
   */
  public void setIndexIpid(java.lang.CharSequence value) {
    this.index_ipid = value;
  }

  /**
   * Gets the value of the 'last_update_timestamp' field.
   * @return The value of the 'last_update_timestamp' field.
   */
  public long getLastUpdateTimestamp() {
    return last_update_timestamp;
  }


  /**
   * Sets the value of the 'last_update_timestamp' field.
   * @param value the value to set.
   */
  public void setLastUpdateTimestamp(long value) {
    this.last_update_timestamp = value;
  }

  /**
   * Gets the value of the 'last_update_loginid' field.
   * @return The value of the 'last_update_loginid' field.
   */
  public java.lang.CharSequence getLastUpdateLoginid() {
    return last_update_loginid;
  }


  /**
   * Sets the value of the 'last_update_loginid' field.
   * @param value the value to set.
   */
  public void setLastUpdateLoginid(java.lang.CharSequence value) {
    this.last_update_loginid = value;
  }

  /**
   * Gets the value of the 'partner_ipid' field.
   * @return The value of the 'partner_ipid' field.
   */
  public java.lang.CharSequence getPartnerIpid() {
    return partner_ipid;
  }


  /**
   * Sets the value of the 'partner_ipid' field.
   * @param value the value to set.
   */
  public void setPartnerIpid(java.lang.CharSequence value) {
    this.partner_ipid = value;
  }

  /**
   * Gets the value of the 'drivers' field.
   * @return The value of the 'drivers' field.
   */
  public java.lang.CharSequence getDrivers() {
    return drivers;
  }


  /**
   * Sets the value of the 'drivers' field.
   * @param value the value to set.
   */
  public void setDrivers(java.lang.CharSequence value) {
    this.drivers = value;
  }

  /**
   * Gets the value of the 'competencies' field.
   * @return The value of the 'competencies' field.
   */
  public java.lang.CharSequence getCompetencies() {
    return competencies;
  }


  /**
   * Sets the value of the 'competencies' field.
   * @param value the value to set.
   */
  public void setCompetencies(java.lang.CharSequence value) {
    this.competencies = value;
  }

  /**
   * Gets the value of the 'capabilities' field.
   * @return The value of the 'capabilities' field.
   */
  public java.lang.CharSequence getCapabilities() {
    return capabilities;
  }


  /**
   * Sets the value of the 'capabilities' field.
   * @param value the value to set.
   */
  public void setCapabilities(java.lang.CharSequence value) {
    this.capabilities = value;
  }

  /**
   * Gets the value of the 'client_structure' field.
   * @return The value of the 'client_structure' field.
   */
  public java.lang.CharSequence getClientStructure() {
    return client_structure;
  }


  /**
   * Sets the value of the 'client_structure' field.
   * @param value the value to set.
   */
  public void setClientStructure(java.lang.CharSequence value) {
    this.client_structure = value;
  }

  /**
   * Gets the value of the 'goals' field.
   * @return The value of the 'goals' field.
   */
  public java.lang.CharSequence getGoals() {
    return goals;
  }


  /**
   * Sets the value of the 'goals' field.
   * @param value the value to set.
   */
  public void setGoals(java.lang.CharSequence value) {
    this.goals = value;
  }

  /**
   * Gets the value of the 'sales_regions' field.
   * @return The value of the 'sales_regions' field.
   */
  public java.util.List<business.model.strategy.MarketRegionsEnum> getSalesRegions() {
    return sales_regions;
  }


  /**
   * Sets the value of the 'sales_regions' field.
   * @param value the value to set.
   */
  public void setSalesRegions(java.util.List<business.model.strategy.MarketRegionsEnum> value) {
    this.sales_regions = value;
  }

  /**
   * Gets the value of the 'sales_countries_150' field.
   * @return Countries in Europe Region (ISO 3166-1 alpha-2)
   */
  public java.util.List<java.lang.CharSequence> getSalesCountries150() {
    return sales_countries_150;
  }


  /**
   * Sets the value of the 'sales_countries_150' field.
   * Countries in Europe Region (ISO 3166-1 alpha-2)
   * @param value the value to set.
   */
  public void setSalesCountries150(java.util.List<java.lang.CharSequence> value) {
    this.sales_countries_150 = value;
  }

  /**
   * Gets the value of the 'sales_countries_142' field.
   * @return Countries in Asia Region (M49 codes)
   */
  public java.util.List<java.lang.CharSequence> getSalesCountries142() {
    return sales_countries_142;
  }


  /**
   * Sets the value of the 'sales_countries_142' field.
   * Countries in Asia Region (M49 codes)
   * @param value the value to set.
   */
  public void setSalesCountries142(java.util.List<java.lang.CharSequence> value) {
    this.sales_countries_142 = value;
  }

  /**
   * Gets the value of the 'sales_countries_021' field.
   * @return Countries in North America Region (M49 codes)
   */
  public java.util.List<java.lang.CharSequence> getSalesCountries021() {
    return sales_countries_021;
  }


  /**
   * Sets the value of the 'sales_countries_021' field.
   * Countries in North America Region (M49 codes)
   * @param value the value to set.
   */
  public void setSalesCountries021(java.util.List<java.lang.CharSequence> value) {
    this.sales_countries_021 = value;
  }

  /**
   * Gets the value of the 'sales_countries_other' field.
   * @return Countries in Other Region (M49 codes)
   */
  public java.util.List<java.lang.CharSequence> getSalesCountriesOther() {
    return sales_countries_other;
  }


  /**
   * Sets the value of the 'sales_countries_other' field.
   * Countries in Other Region (M49 codes)
   * @param value the value to set.
   */
  public void setSalesCountriesOther(java.util.List<java.lang.CharSequence> value) {
    this.sales_countries_other = value;
  }

  /**
   * Creates a new BusinessModelStrategy RecordBuilder.
   * @return A new BusinessModelStrategy RecordBuilder
   */
  public static business.model.strategy.BusinessModelStrategy.Builder newBuilder() {
    return new business.model.strategy.BusinessModelStrategy.Builder();
  }

  /**
   * Creates a new BusinessModelStrategy RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BusinessModelStrategy RecordBuilder
   */
  public static business.model.strategy.BusinessModelStrategy.Builder newBuilder(business.model.strategy.BusinessModelStrategy.Builder other) {
    if (other == null) {
      return new business.model.strategy.BusinessModelStrategy.Builder();
    } else {
      return new business.model.strategy.BusinessModelStrategy.Builder(other);
    }
  }

  /**
   * Creates a new BusinessModelStrategy RecordBuilder by copying an existing BusinessModelStrategy instance.
   * @param other The existing instance to copy.
   * @return A new BusinessModelStrategy RecordBuilder
   */
  public static business.model.strategy.BusinessModelStrategy.Builder newBuilder(business.model.strategy.BusinessModelStrategy other) {
    if (other == null) {
      return new business.model.strategy.BusinessModelStrategy.Builder();
    } else {
      return new business.model.strategy.BusinessModelStrategy.Builder(other);
    }
  }

  /**
   * RecordBuilder for BusinessModelStrategy instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BusinessModelStrategy>
    implements org.apache.avro.data.RecordBuilder<BusinessModelStrategy> {

    private long avro_fingerprint;
    private java.lang.CharSequence index_ipid;
    private long last_update_timestamp;
    private java.lang.CharSequence last_update_loginid;
    private java.lang.CharSequence partner_ipid;
    private java.lang.CharSequence drivers;
    private java.lang.CharSequence competencies;
    private java.lang.CharSequence capabilities;
    private java.lang.CharSequence client_structure;
    private java.lang.CharSequence goals;
    private java.util.List<business.model.strategy.MarketRegionsEnum> sales_regions;
    /** Countries in Europe Region (ISO 3166-1 alpha-2) */
    private java.util.List<java.lang.CharSequence> sales_countries_150;
    /** Countries in Asia Region (M49 codes) */
    private java.util.List<java.lang.CharSequence> sales_countries_142;
    /** Countries in North America Region (M49 codes) */
    private java.util.List<java.lang.CharSequence> sales_countries_021;
    /** Countries in Other Region (M49 codes) */
    private java.util.List<java.lang.CharSequence> sales_countries_other;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(business.model.strategy.BusinessModelStrategy.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.avro_fingerprint)) {
        this.avro_fingerprint = data().deepCopy(fields()[0].schema(), other.avro_fingerprint);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.index_ipid)) {
        this.index_ipid = data().deepCopy(fields()[1].schema(), other.index_ipid);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.last_update_timestamp)) {
        this.last_update_timestamp = data().deepCopy(fields()[2].schema(), other.last_update_timestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.last_update_loginid)) {
        this.last_update_loginid = data().deepCopy(fields()[3].schema(), other.last_update_loginid);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.partner_ipid)) {
        this.partner_ipid = data().deepCopy(fields()[4].schema(), other.partner_ipid);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.drivers)) {
        this.drivers = data().deepCopy(fields()[5].schema(), other.drivers);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.competencies)) {
        this.competencies = data().deepCopy(fields()[6].schema(), other.competencies);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.capabilities)) {
        this.capabilities = data().deepCopy(fields()[7].schema(), other.capabilities);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.client_structure)) {
        this.client_structure = data().deepCopy(fields()[8].schema(), other.client_structure);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.goals)) {
        this.goals = data().deepCopy(fields()[9].schema(), other.goals);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.sales_regions)) {
        this.sales_regions = data().deepCopy(fields()[10].schema(), other.sales_regions);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.sales_countries_150)) {
        this.sales_countries_150 = data().deepCopy(fields()[11].schema(), other.sales_countries_150);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.sales_countries_142)) {
        this.sales_countries_142 = data().deepCopy(fields()[12].schema(), other.sales_countries_142);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.sales_countries_021)) {
        this.sales_countries_021 = data().deepCopy(fields()[13].schema(), other.sales_countries_021);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.sales_countries_other)) {
        this.sales_countries_other = data().deepCopy(fields()[14].schema(), other.sales_countries_other);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing BusinessModelStrategy instance
     * @param other The existing instance to copy.
     */
    private Builder(business.model.strategy.BusinessModelStrategy other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.avro_fingerprint)) {
        this.avro_fingerprint = data().deepCopy(fields()[0].schema(), other.avro_fingerprint);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.index_ipid)) {
        this.index_ipid = data().deepCopy(fields()[1].schema(), other.index_ipid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.last_update_timestamp)) {
        this.last_update_timestamp = data().deepCopy(fields()[2].schema(), other.last_update_timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.last_update_loginid)) {
        this.last_update_loginid = data().deepCopy(fields()[3].schema(), other.last_update_loginid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.partner_ipid)) {
        this.partner_ipid = data().deepCopy(fields()[4].schema(), other.partner_ipid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.drivers)) {
        this.drivers = data().deepCopy(fields()[5].schema(), other.drivers);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.competencies)) {
        this.competencies = data().deepCopy(fields()[6].schema(), other.competencies);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.capabilities)) {
        this.capabilities = data().deepCopy(fields()[7].schema(), other.capabilities);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.client_structure)) {
        this.client_structure = data().deepCopy(fields()[8].schema(), other.client_structure);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.goals)) {
        this.goals = data().deepCopy(fields()[9].schema(), other.goals);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.sales_regions)) {
        this.sales_regions = data().deepCopy(fields()[10].schema(), other.sales_regions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.sales_countries_150)) {
        this.sales_countries_150 = data().deepCopy(fields()[11].schema(), other.sales_countries_150);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.sales_countries_142)) {
        this.sales_countries_142 = data().deepCopy(fields()[12].schema(), other.sales_countries_142);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sales_countries_021)) {
        this.sales_countries_021 = data().deepCopy(fields()[13].schema(), other.sales_countries_021);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.sales_countries_other)) {
        this.sales_countries_other = data().deepCopy(fields()[14].schema(), other.sales_countries_other);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'avro_fingerprint' field.
      * @return The value.
      */
    public long getAvroFingerprint() {
      return avro_fingerprint;
    }


    /**
      * Sets the value of the 'avro_fingerprint' field.
      * @param value The value of 'avro_fingerprint'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setAvroFingerprint(long value) {
      validate(fields()[0], value);
      this.avro_fingerprint = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'avro_fingerprint' field has been set.
      * @return True if the 'avro_fingerprint' field has been set, false otherwise.
      */
    public boolean hasAvroFingerprint() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'avro_fingerprint' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearAvroFingerprint() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'index_ipid' field.
      * @return The value.
      */
    public java.lang.CharSequence getIndexIpid() {
      return index_ipid;
    }


    /**
      * Sets the value of the 'index_ipid' field.
      * @param value The value of 'index_ipid'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setIndexIpid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.index_ipid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'index_ipid' field has been set.
      * @return True if the 'index_ipid' field has been set, false otherwise.
      */
    public boolean hasIndexIpid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'index_ipid' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearIndexIpid() {
      index_ipid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_update_timestamp' field.
      * @return The value.
      */
    public long getLastUpdateTimestamp() {
      return last_update_timestamp;
    }


    /**
      * Sets the value of the 'last_update_timestamp' field.
      * @param value The value of 'last_update_timestamp'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setLastUpdateTimestamp(long value) {
      validate(fields()[2], value);
      this.last_update_timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'last_update_timestamp' field has been set.
      * @return True if the 'last_update_timestamp' field has been set, false otherwise.
      */
    public boolean hasLastUpdateTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'last_update_timestamp' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearLastUpdateTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_update_loginid' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastUpdateLoginid() {
      return last_update_loginid;
    }


    /**
      * Sets the value of the 'last_update_loginid' field.
      * @param value The value of 'last_update_loginid'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setLastUpdateLoginid(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.last_update_loginid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'last_update_loginid' field has been set.
      * @return True if the 'last_update_loginid' field has been set, false otherwise.
      */
    public boolean hasLastUpdateLoginid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'last_update_loginid' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearLastUpdateLoginid() {
      last_update_loginid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'partner_ipid' field.
      * @return The value.
      */
    public java.lang.CharSequence getPartnerIpid() {
      return partner_ipid;
    }


    /**
      * Sets the value of the 'partner_ipid' field.
      * @param value The value of 'partner_ipid'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setPartnerIpid(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.partner_ipid = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'partner_ipid' field has been set.
      * @return True if the 'partner_ipid' field has been set, false otherwise.
      */
    public boolean hasPartnerIpid() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'partner_ipid' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearPartnerIpid() {
      partner_ipid = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'drivers' field.
      * @return The value.
      */
    public java.lang.CharSequence getDrivers() {
      return drivers;
    }


    /**
      * Sets the value of the 'drivers' field.
      * @param value The value of 'drivers'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setDrivers(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.drivers = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'drivers' field has been set.
      * @return True if the 'drivers' field has been set, false otherwise.
      */
    public boolean hasDrivers() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'drivers' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearDrivers() {
      drivers = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'competencies' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompetencies() {
      return competencies;
    }


    /**
      * Sets the value of the 'competencies' field.
      * @param value The value of 'competencies'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setCompetencies(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.competencies = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'competencies' field has been set.
      * @return True if the 'competencies' field has been set, false otherwise.
      */
    public boolean hasCompetencies() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'competencies' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearCompetencies() {
      competencies = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'capabilities' field.
      * @return The value.
      */
    public java.lang.CharSequence getCapabilities() {
      return capabilities;
    }


    /**
      * Sets the value of the 'capabilities' field.
      * @param value The value of 'capabilities'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setCapabilities(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.capabilities = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'capabilities' field has been set.
      * @return True if the 'capabilities' field has been set, false otherwise.
      */
    public boolean hasCapabilities() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'capabilities' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearCapabilities() {
      capabilities = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'client_structure' field.
      * @return The value.
      */
    public java.lang.CharSequence getClientStructure() {
      return client_structure;
    }


    /**
      * Sets the value of the 'client_structure' field.
      * @param value The value of 'client_structure'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setClientStructure(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.client_structure = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'client_structure' field has been set.
      * @return True if the 'client_structure' field has been set, false otherwise.
      */
    public boolean hasClientStructure() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'client_structure' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearClientStructure() {
      client_structure = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'goals' field.
      * @return The value.
      */
    public java.lang.CharSequence getGoals() {
      return goals;
    }


    /**
      * Sets the value of the 'goals' field.
      * @param value The value of 'goals'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setGoals(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.goals = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'goals' field has been set.
      * @return True if the 'goals' field has been set, false otherwise.
      */
    public boolean hasGoals() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'goals' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearGoals() {
      goals = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'sales_regions' field.
      * @return The value.
      */
    public java.util.List<business.model.strategy.MarketRegionsEnum> getSalesRegions() {
      return sales_regions;
    }


    /**
      * Sets the value of the 'sales_regions' field.
      * @param value The value of 'sales_regions'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setSalesRegions(java.util.List<business.model.strategy.MarketRegionsEnum> value) {
      validate(fields()[10], value);
      this.sales_regions = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'sales_regions' field has been set.
      * @return True if the 'sales_regions' field has been set, false otherwise.
      */
    public boolean hasSalesRegions() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'sales_regions' field.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearSalesRegions() {
      sales_regions = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'sales_countries_150' field.
      * Countries in Europe Region (ISO 3166-1 alpha-2)
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSalesCountries150() {
      return sales_countries_150;
    }


    /**
      * Sets the value of the 'sales_countries_150' field.
      * Countries in Europe Region (ISO 3166-1 alpha-2)
      * @param value The value of 'sales_countries_150'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setSalesCountries150(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.sales_countries_150 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'sales_countries_150' field has been set.
      * Countries in Europe Region (ISO 3166-1 alpha-2)
      * @return True if the 'sales_countries_150' field has been set, false otherwise.
      */
    public boolean hasSalesCountries150() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'sales_countries_150' field.
      * Countries in Europe Region (ISO 3166-1 alpha-2)
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearSalesCountries150() {
      sales_countries_150 = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'sales_countries_142' field.
      * Countries in Asia Region (M49 codes)
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSalesCountries142() {
      return sales_countries_142;
    }


    /**
      * Sets the value of the 'sales_countries_142' field.
      * Countries in Asia Region (M49 codes)
      * @param value The value of 'sales_countries_142'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setSalesCountries142(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[12], value);
      this.sales_countries_142 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'sales_countries_142' field has been set.
      * Countries in Asia Region (M49 codes)
      * @return True if the 'sales_countries_142' field has been set, false otherwise.
      */
    public boolean hasSalesCountries142() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'sales_countries_142' field.
      * Countries in Asia Region (M49 codes)
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearSalesCountries142() {
      sales_countries_142 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'sales_countries_021' field.
      * Countries in North America Region (M49 codes)
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSalesCountries021() {
      return sales_countries_021;
    }


    /**
      * Sets the value of the 'sales_countries_021' field.
      * Countries in North America Region (M49 codes)
      * @param value The value of 'sales_countries_021'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setSalesCountries021(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[13], value);
      this.sales_countries_021 = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'sales_countries_021' field has been set.
      * Countries in North America Region (M49 codes)
      * @return True if the 'sales_countries_021' field has been set, false otherwise.
      */
    public boolean hasSalesCountries021() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'sales_countries_021' field.
      * Countries in North America Region (M49 codes)
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearSalesCountries021() {
      sales_countries_021 = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'sales_countries_other' field.
      * Countries in Other Region (M49 codes)
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSalesCountriesOther() {
      return sales_countries_other;
    }


    /**
      * Sets the value of the 'sales_countries_other' field.
      * Countries in Other Region (M49 codes)
      * @param value The value of 'sales_countries_other'.
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder setSalesCountriesOther(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[14], value);
      this.sales_countries_other = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'sales_countries_other' field has been set.
      * Countries in Other Region (M49 codes)
      * @return True if the 'sales_countries_other' field has been set, false otherwise.
      */
    public boolean hasSalesCountriesOther() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'sales_countries_other' field.
      * Countries in Other Region (M49 codes)
      * @return This builder.
      */
    public business.model.strategy.BusinessModelStrategy.Builder clearSalesCountriesOther() {
      sales_countries_other = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BusinessModelStrategy build() {
      try {
        BusinessModelStrategy record = new BusinessModelStrategy();
        record.avro_fingerprint = fieldSetFlags()[0] ? this.avro_fingerprint : (java.lang.Long) defaultValue(fields()[0]);
        record.index_ipid = fieldSetFlags()[1] ? this.index_ipid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.last_update_timestamp = fieldSetFlags()[2] ? this.last_update_timestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.last_update_loginid = fieldSetFlags()[3] ? this.last_update_loginid : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.partner_ipid = fieldSetFlags()[4] ? this.partner_ipid : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.drivers = fieldSetFlags()[5] ? this.drivers : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.competencies = fieldSetFlags()[6] ? this.competencies : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.capabilities = fieldSetFlags()[7] ? this.capabilities : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.client_structure = fieldSetFlags()[8] ? this.client_structure : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.goals = fieldSetFlags()[9] ? this.goals : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.sales_regions = fieldSetFlags()[10] ? this.sales_regions : (java.util.List<business.model.strategy.MarketRegionsEnum>) defaultValue(fields()[10]);
        record.sales_countries_150 = fieldSetFlags()[11] ? this.sales_countries_150 : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[11]);
        record.sales_countries_142 = fieldSetFlags()[12] ? this.sales_countries_142 : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[12]);
        record.sales_countries_021 = fieldSetFlags()[13] ? this.sales_countries_021 : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[13]);
        record.sales_countries_other = fieldSetFlags()[14] ? this.sales_countries_other : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BusinessModelStrategy>
    WRITER$ = (org.apache.avro.io.DatumWriter<BusinessModelStrategy>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BusinessModelStrategy>
    READER$ = (org.apache.avro.io.DatumReader<BusinessModelStrategy>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.avro_fingerprint);

    out.writeString(this.index_ipid);

    out.writeLong(this.last_update_timestamp);

    out.writeString(this.last_update_loginid);

    out.writeString(this.partner_ipid);

    if (this.drivers == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.drivers);
    }

    if (this.competencies == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.competencies);
    }

    if (this.capabilities == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.capabilities);
    }

    if (this.client_structure == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.client_structure);
    }

    if (this.goals == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.goals);
    }

    if (this.sales_regions == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.sales_regions.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (business.model.strategy.MarketRegionsEnum e0: this.sales_regions) {
        actualSize0++;
        out.startItem();
        out.writeEnum(e0.ordinal());
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.sales_countries_150 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.sales_countries_150.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (java.lang.CharSequence e1: this.sales_countries_150) {
        actualSize1++;
        out.startItem();
        out.writeString(e1);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.sales_countries_142 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size2 = this.sales_countries_142.size();
      out.writeArrayStart();
      out.setItemCount(size2);
      long actualSize2 = 0;
      for (java.lang.CharSequence e2: this.sales_countries_142) {
        actualSize2++;
        out.startItem();
        out.writeString(e2);
      }
      out.writeArrayEnd();
      if (actualSize2 != size2)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");
    }

    if (this.sales_countries_021 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size3 = this.sales_countries_021.size();
      out.writeArrayStart();
      out.setItemCount(size3);
      long actualSize3 = 0;
      for (java.lang.CharSequence e3: this.sales_countries_021) {
        actualSize3++;
        out.startItem();
        out.writeString(e3);
      }
      out.writeArrayEnd();
      if (actualSize3 != size3)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");
    }

    if (this.sales_countries_other == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size4 = this.sales_countries_other.size();
      out.writeArrayStart();
      out.setItemCount(size4);
      long actualSize4 = 0;
      for (java.lang.CharSequence e4: this.sales_countries_other) {
        actualSize4++;
        out.startItem();
        out.writeString(e4);
      }
      out.writeArrayEnd();
      if (actualSize4 != size4)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size4 + ", but element count was " + actualSize4 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.avro_fingerprint = in.readLong();

      this.index_ipid = in.readString(this.index_ipid instanceof Utf8 ? (Utf8)this.index_ipid : null);

      this.last_update_timestamp = in.readLong();

      this.last_update_loginid = in.readString(this.last_update_loginid instanceof Utf8 ? (Utf8)this.last_update_loginid : null);

      this.partner_ipid = in.readString(this.partner_ipid instanceof Utf8 ? (Utf8)this.partner_ipid : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.drivers = null;
      } else {
        this.drivers = in.readString(this.drivers instanceof Utf8 ? (Utf8)this.drivers : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.competencies = null;
      } else {
        this.competencies = in.readString(this.competencies instanceof Utf8 ? (Utf8)this.competencies : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.capabilities = null;
      } else {
        this.capabilities = in.readString(this.capabilities instanceof Utf8 ? (Utf8)this.capabilities : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.client_structure = null;
      } else {
        this.client_structure = in.readString(this.client_structure instanceof Utf8 ? (Utf8)this.client_structure : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.goals = null;
      } else {
        this.goals = in.readString(this.goals instanceof Utf8 ? (Utf8)this.goals : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sales_regions = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<business.model.strategy.MarketRegionsEnum> a0 = this.sales_regions;
        if (a0 == null) {
          a0 = new SpecificData.Array<business.model.strategy.MarketRegionsEnum>((int)size0, SCHEMA$.getField("sales_regions").schema().getTypes().get(1));
          this.sales_regions = a0;
        } else a0.clear();
        SpecificData.Array<business.model.strategy.MarketRegionsEnum> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<business.model.strategy.MarketRegionsEnum>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            business.model.strategy.MarketRegionsEnum e0 = (ga0 != null ? ga0.peek() : null);
            e0 = business.model.strategy.MarketRegionsEnum.values()[in.readEnum()];
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sales_countries_150 = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a1 = this.sales_countries_150;
        if (a1 == null) {
          a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("sales_countries_150").schema().getTypes().get(1));
          this.sales_countries_150 = a1;
        } else a1.clear();
        SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
            e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sales_countries_142 = null;
      } else {
        long size2 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a2 = this.sales_countries_142;
        if (a2 == null) {
          a2 = new SpecificData.Array<java.lang.CharSequence>((int)size2, SCHEMA$.getField("sales_countries_142").schema().getTypes().get(1));
          this.sales_countries_142 = a2;
        } else a2.clear();
        SpecificData.Array<java.lang.CharSequence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a2 : null);
        for ( ; 0 < size2; size2 = in.arrayNext()) {
          for ( ; size2 != 0; size2--) {
            java.lang.CharSequence e2 = (ga2 != null ? ga2.peek() : null);
            e2 = in.readString(e2 instanceof Utf8 ? (Utf8)e2 : null);
            a2.add(e2);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sales_countries_021 = null;
      } else {
        long size3 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a3 = this.sales_countries_021;
        if (a3 == null) {
          a3 = new SpecificData.Array<java.lang.CharSequence>((int)size3, SCHEMA$.getField("sales_countries_021").schema().getTypes().get(1));
          this.sales_countries_021 = a3;
        } else a3.clear();
        SpecificData.Array<java.lang.CharSequence> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a3 : null);
        for ( ; 0 < size3; size3 = in.arrayNext()) {
          for ( ; size3 != 0; size3--) {
            java.lang.CharSequence e3 = (ga3 != null ? ga3.peek() : null);
            e3 = in.readString(e3 instanceof Utf8 ? (Utf8)e3 : null);
            a3.add(e3);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sales_countries_other = null;
      } else {
        long size4 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a4 = this.sales_countries_other;
        if (a4 == null) {
          a4 = new SpecificData.Array<java.lang.CharSequence>((int)size4, SCHEMA$.getField("sales_countries_other").schema().getTypes().get(1));
          this.sales_countries_other = a4;
        } else a4.clear();
        SpecificData.Array<java.lang.CharSequence> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a4 : null);
        for ( ; 0 < size4; size4 = in.arrayNext()) {
          for ( ; size4 != 0; size4--) {
            java.lang.CharSequence e4 = (ga4 != null ? ga4.peek() : null);
            e4 = in.readString(e4 instanceof Utf8 ? (Utf8)e4 : null);
            a4.add(e4);
          }
        }
      }

    } else {
      for (int i = 0; i < 15; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.avro_fingerprint = in.readLong();
          break;

        case 1:
          this.index_ipid = in.readString(this.index_ipid instanceof Utf8 ? (Utf8)this.index_ipid : null);
          break;

        case 2:
          this.last_update_timestamp = in.readLong();
          break;

        case 3:
          this.last_update_loginid = in.readString(this.last_update_loginid instanceof Utf8 ? (Utf8)this.last_update_loginid : null);
          break;

        case 4:
          this.partner_ipid = in.readString(this.partner_ipid instanceof Utf8 ? (Utf8)this.partner_ipid : null);
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.drivers = null;
          } else {
            this.drivers = in.readString(this.drivers instanceof Utf8 ? (Utf8)this.drivers : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.competencies = null;
          } else {
            this.competencies = in.readString(this.competencies instanceof Utf8 ? (Utf8)this.competencies : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.capabilities = null;
          } else {
            this.capabilities = in.readString(this.capabilities instanceof Utf8 ? (Utf8)this.capabilities : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.client_structure = null;
          } else {
            this.client_structure = in.readString(this.client_structure instanceof Utf8 ? (Utf8)this.client_structure : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.goals = null;
          } else {
            this.goals = in.readString(this.goals instanceof Utf8 ? (Utf8)this.goals : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sales_regions = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<business.model.strategy.MarketRegionsEnum> a0 = this.sales_regions;
            if (a0 == null) {
              a0 = new SpecificData.Array<business.model.strategy.MarketRegionsEnum>((int)size0, SCHEMA$.getField("sales_regions").schema().getTypes().get(1));
              this.sales_regions = a0;
            } else a0.clear();
            SpecificData.Array<business.model.strategy.MarketRegionsEnum> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<business.model.strategy.MarketRegionsEnum>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                business.model.strategy.MarketRegionsEnum e0 = (ga0 != null ? ga0.peek() : null);
                e0 = business.model.strategy.MarketRegionsEnum.values()[in.readEnum()];
                a0.add(e0);
              }
            }
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sales_countries_150 = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a1 = this.sales_countries_150;
            if (a1 == null) {
              a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("sales_countries_150").schema().getTypes().get(1));
              this.sales_countries_150 = a1;
            } else a1.clear();
            SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
                e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
                a1.add(e1);
              }
            }
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sales_countries_142 = null;
          } else {
            long size2 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a2 = this.sales_countries_142;
            if (a2 == null) {
              a2 = new SpecificData.Array<java.lang.CharSequence>((int)size2, SCHEMA$.getField("sales_countries_142").schema().getTypes().get(1));
              this.sales_countries_142 = a2;
            } else a2.clear();
            SpecificData.Array<java.lang.CharSequence> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a2 : null);
            for ( ; 0 < size2; size2 = in.arrayNext()) {
              for ( ; size2 != 0; size2--) {
                java.lang.CharSequence e2 = (ga2 != null ? ga2.peek() : null);
                e2 = in.readString(e2 instanceof Utf8 ? (Utf8)e2 : null);
                a2.add(e2);
              }
            }
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sales_countries_021 = null;
          } else {
            long size3 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a3 = this.sales_countries_021;
            if (a3 == null) {
              a3 = new SpecificData.Array<java.lang.CharSequence>((int)size3, SCHEMA$.getField("sales_countries_021").schema().getTypes().get(1));
              this.sales_countries_021 = a3;
            } else a3.clear();
            SpecificData.Array<java.lang.CharSequence> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a3 : null);
            for ( ; 0 < size3; size3 = in.arrayNext()) {
              for ( ; size3 != 0; size3--) {
                java.lang.CharSequence e3 = (ga3 != null ? ga3.peek() : null);
                e3 = in.readString(e3 instanceof Utf8 ? (Utf8)e3 : null);
                a3.add(e3);
              }
            }
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sales_countries_other = null;
          } else {
            long size4 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a4 = this.sales_countries_other;
            if (a4 == null) {
              a4 = new SpecificData.Array<java.lang.CharSequence>((int)size4, SCHEMA$.getField("sales_countries_other").schema().getTypes().get(1));
              this.sales_countries_other = a4;
            } else a4.clear();
            SpecificData.Array<java.lang.CharSequence> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a4 : null);
            for ( ; 0 < size4; size4 = in.arrayNext()) {
              for ( ; size4 != 0; size4--) {
                java.lang.CharSequence e4 = (ga4 != null ? ga4.peek() : null);
                e4 = in.readString(e4 instanceof Utf8 ? (Utf8)e4 : null);
                a4.add(e4);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










